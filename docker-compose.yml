services:
  db:
    image: postgres:13-alpine
    container_name: lingua-quiz-db-local
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - pgdata_local:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - lingua-quiz-local-net

  backend:
    container_name: lingua-quiz-backend-local
    build:
      context: .
      dockerfile: packages/backend/Dockerfile
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    environment:
      NODE_ENV: ${NODE_ENV:-development}
      PORT: 9000
      DB_HOST: ${DB_HOST:-db}
      DB_PORT: ${DB_PORT:-5432}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
    ports:
      - "9000:9000"
    command: >
      sh -c "sleep 5 && node src/migrations.js && node src/server.js"
    networks:
      - lingua-quiz-local-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://backend:9000/api/health"]
      interval: 15s
      timeout: 5s
      retries: 10
      start_period: 30s

  frontend:
    container_name: lingua-quiz-frontend-local
    build:
      context: ./packages/frontend
      dockerfile: Dockerfile
    restart: unless-stopped
    ports:
      - "8080:80"
    networks:
      - lingua-quiz-local-net
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://frontend:80/"]
      interval: 10s
      timeout: 3s
      retries: 5
      start_period: 5s

volumes:
  pgdata_local:

networks:
  lingua-quiz-local-net:
    driver: bridge
