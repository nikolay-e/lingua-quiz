# Optimized for fast builds on powerful machines
x-build-args: &build-args
  BUILDKIT_INLINE_CACHE: 1

services:
  db:
    image: postgres:13
    environment:
      POSTGRES_PASSWORD: postgres
    ports: ["5432:5432"]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 3s
      retries: 5
      start_period: 5s
    networks:
      - lingua-quiz-local-net
    volumes:
      - pgdata_local:/var/lib/postgresql/data
  
  backend:
    build:
      context: packages/backend
      args:
        <<: *build-args
    ports: ["9000:9000"]
    environment:
      DB_HOST: db
      DB_PORT: 5432
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      JWT_PRIMARY_SECRET: dev-primary-secret
      JWT_SECONDARY_SECRET: dev-secondary-secret
      DOCKER_ENVIRONMENT: true
      MIGRATE: true
      GOOGLE_CLOUD_CREDENTIALS_B64: ${GOOGLE_CLOUD_CREDENTIALS_B64}
      CORS_ALLOWED_ORIGINS: "http://localhost:8080,http://localhost:5173,http://frontend,http://frontend:80,https://lingua-quiz.nikolay-eremeev.com,https://test-lingua-quiz.nikolay-eremeev.com"
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/api/health"]
      interval: 5s
      timeout: 2s
      retries: 3
      start_period: 3s
    networks:
      - lingua-quiz-local-net
    deploy:
      resources:
        limits:
          cpus: '${BACKEND_CPUS_LIMIT:-3.5}'
          memory: '${BACKEND_MEMORY_LIMIT:-2G}'
        reservations:
          cpus: '${BACKEND_CPUS_RESERVATION:-2.0}'
          memory: '${BACKEND_MEMORY_RESERVATION:-1G}'
  
  frontend:
    build:
      context: .
      dockerfile: packages/frontend/Dockerfile
      args:
        <<: *build-args
    ports: ["8080:80"]
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 5s
      timeout: 2s
      retries: 3
      start_period: 3s
    networks:
      - lingua-quiz-local-net
    deploy:
      resources:
        limits:
          cpus: '${FRONTEND_CPUS_LIMIT:-1.0}'
          memory: '${FRONTEND_MEMORY_LIMIT:-512M}'
        reservations:
          cpus: '${FRONTEND_CPUS_RESERVATION:-0.5}'
          memory: '${FRONTEND_MEMORY_RESERVATION:-256M}'

  e2e-tests:
    container_name: lingua-quiz-e2e-tests
    build:
      context: .
      dockerfile: packages/e2e-tests/Dockerfile
      args:
        <<: *build-args
    environment:
      LINGUA_QUIZ_URL: http://frontend:80
      API_URL: http://backend:9000/api
      NODE_ENV: test
      PLAYWRIGHT_WORKERS: '${PLAYWRIGHT_WORKERS:-4}'
      PLAYWRIGHT_PARALLEL: '${PLAYWRIGHT_PARALLEL:-4}'
      NODE_OPTIONS: "--max-old-space-size=4096"
    depends_on:
      frontend:
        condition: service_healthy
      backend:
        condition: service_healthy
    networks:
      - lingua-quiz-local-net
    volumes:
      - ./packages/e2e-tests/playwright-report:/app/playwright-report
      - ./packages/e2e-tests/test-results:/app/test-results
    deploy:
      resources:
        limits:
          cpus: '${E2E_CPUS_LIMIT:-3.5}'
          memory: '${E2E_MEMORY_LIMIT:-7G}' # GitHub runners have 7GB of RAM
        reservations:
          cpus: '${E2E_CPUS_RESERVATION:-2.0}'
          memory: '${E2E_MEMORY_RESERVATION:-4G}'

volumes:
  pgdata_local:

networks:
  lingua-quiz-local-net:
    driver: bridge