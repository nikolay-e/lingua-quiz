# Pre-commit configuration for Lingua Quiz
# Hooks are organized from fastest to slowest for optimal developer experience

repos:
  # =============================================================================
  # STAGE 1: Fast Safety Checks (runs in milliseconds)
  # =============================================================================
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v6.0.0
    hooks:
      - id: trailing-whitespace
        name: Trim trailing whitespace
        exclude: ^(flux/clusters/preview-pr-*|flux/clusters/cleanup/.*)$
      - id: end-of-file-fixer
        name: Fix end of files
        exclude: ^(flux/clusters/preview-pr-*|flux/clusters/cleanup/.*)$
      - id: check-yaml
        name: Check YAML syntax
        exclude: ^(helm/.*\.yaml|code\.yaml|flux/.*/flux-system/.*|flux/clusters/preview-pr-*|flux/clusters/cleanup/.*)$
      - id: check-json
        name: Check JSON syntax
      - id: check-merge-conflict
        name: Check for merge conflicts
      - id: mixed-line-ending
        name: Fix mixed line endings
      - id: check-case-conflict
        name: Check for case conflicts
      - id: debug-statements
        name: Check for debug statements
      - id: check-added-large-files
        name: Check for large files
        args: ['--maxkb=1000']

  # =============================================================================
  # STAGE 2: File Format Validation
  # =============================================================================
  # YAML linting
  - repo: https://github.com/adrienverge/yamllint
    rev: v1.37.1
    hooks:
      - id: yamllint
        name: Lint YAML files
        args: [-d, relaxed]
        files: \.(yaml|yml)$
        exclude: ^(helm/.*\.yaml|code\.yaml|flux/.*/flux-system/.*|flux/clusters/preview-pr-*|flux/clusters/cleanup/.*)$

  # SQL linting and formatting
  - repo: https://github.com/sqlfluff/sqlfluff
    rev: 3.4.2
    hooks:
      - id: sqlfluff-fix
        name: Format SQL files
        args: [--dialect=postgres]
        files: \.sql$
      - id: sqlfluff-lint
        name: Lint SQL files
        args: [--dialect=postgres]
        files: \.sql$

  # =============================================================================
  # STAGE 3: Python Code Quality
  # =============================================================================
  # Python import sorting
  - repo: https://github.com/pycqa/isort
    rev: 6.1.0
    hooks:
      - id: isort
        name: Sort Python imports
        args: ['--profile', 'black']
        files: \.py$

  # Python auto-formatting
  - repo: https://github.com/pycqa/autoflake
    rev: v2.3.1
    hooks:
      - id: autoflake
        name: Remove unused Python imports
        args: [--remove-all-unused-imports, --remove-unused-variables, --in-place]
        files: \.py$

  - repo: https://github.com/psf/black
    rev: 25.9.0
    hooks:
      - id: black
        name: Format Python code
        args: ['--line-length=150']
        files: \.py$

  # Python linting
  - repo: https://github.com/pycqa/flake8
    rev: 7.3.0
    hooks:
      - id: flake8
        name: Lint Python code
        files: \.py$
        args: ['--max-line-length=150', '--extend-ignore=E203,W503']

  # =============================================================================
  # STAGE 4: JavaScript/TypeScript Code Quality
  # =============================================================================
  # Prettier formatting (runs before ESLint to avoid conflicts)
  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v4.0.0-alpha.8
    hooks:
      - id: prettier
        name: Format with Prettier
        args: [--write, --ignore-path, .gitignore]
        files: \.(js|jsx|ts|tsx|svelte|json|css|scss|html|yaml|yml|md)$
        exclude: ^(packages/.*/(dist|build|node_modules)/.*|helm/.*\.yaml|code\.yaml|package-lock\.json|flux/.*/flux-system/.*|flux/clusters/preview-pr-*|flux/clusters/cleanup/.*)$

  # ESLint (runs after Prettier)
  - repo: local
    hooks:
      - id: eslint
        name: Lint JS/TS/Svelte with ESLint
        entry: npm run lint:fix
        language: system
        files: \.(js|jsx|ts|tsx|svelte)$
        pass_filenames: false
        require_serial: true

  # TypeScript type checking
  - repo: local
    hooks:
      - id: typescript-check
        name: TypeScript type checking
        entry: npm run typecheck
        language: system
        files: \.(ts|tsx)$
        pass_filenames: false
        require_serial: true

  # =============================================================================
  # STAGE 5: Infrastructure and Configuration
  # =============================================================================
  # Helm chart linting
  - repo: https://github.com/gruntwork-io/pre-commit
    rev: v0.1.30
    hooks:
      - id: helmlint
        name: Lint Helm charts

  # Docker file linting
  - repo: https://github.com/hadolint/hadolint
    rev: v2.14.0
    hooks:
      - id: hadolint-docker
        name: Lint Dockerfile
        args: ['--ignore', 'DL3018', '--ignore', 'DL3013', '--ignore', 'DL3029', '--ignore', 'DL3059', '--ignore', 'DL3003']

  # =============================================================================
  # STAGE 6: Security Checks
  # =============================================================================
  # Detect secrets and credentials
  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.5.0
    hooks:
      - id: detect-secrets
        name: Detect secrets
        args: ['--baseline', '.secrets.baseline']
        exclude: package-lock.json
