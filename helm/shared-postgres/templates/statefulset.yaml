apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "shared-postgres.fullname" . }}
  namespace: {{ include "shared-postgres.namespace" . }}
  labels:
    {{- include "shared-postgres.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "shared-postgres.fullname" . }}
  replicas: 1
  selector:
    matchLabels:
      {{- include "shared-postgres.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "shared-postgres.selectorLabels" . | nindent 8 }}
    spec:
      securityContext:
        {{- toYaml .Values.postgres.securityContext | nindent 8 }}
      containers:
        - name: postgres
          image: "{{ .Values.postgres.image.repository }}:{{ .Values.postgres.image.tag }}"
          imagePullPolicy: {{ .Values.postgres.image.pullPolicy }}
          ports:
            - containerPort: 5432
              name: postgresql
          env:
            # Admin credentials
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: {{ include "shared-postgres.fullname" . }}-admin
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "shared-postgres.fullname" . }}-admin
                  key: POSTGRES_PASSWORD
            - name: POSTGRES_DB
              value: postgres
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
            # Database passwords for initialization script
            {{- range $dbName, $dbConfig := .Values.databases }}
            - name: {{ $dbName | upper | replace "-" "_" }}_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "shared-postgres.fullname" $ }}-{{ $dbName }}
                  key: POSTGRES_PASSWORD
            {{- end }}
          volumeMounts:
            - name: postgres-storage
              mountPath: /var/lib/postgresql/data
            - name: init-scripts
              mountPath: /docker-entrypoint-initdb.d
          resources:
            {{- toYaml .Values.postgres.resources | nindent 12 }}
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - pg_isready -U $POSTGRES_USER -d postgres
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - pg_isready -U $POSTGRES_USER -d postgres
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
      volumes:
        - name: init-scripts
          configMap:
            name: {{ include "shared-postgres.fullname" . }}-init
        {{- if not .Values.postgres.persistence.enabled }}
        - name: postgres-storage
          emptyDir: {}
        {{- end }}
  {{- if .Values.postgres.persistence.enabled }}
  volumeClaimTemplates:
    - metadata:
        name: postgres-storage
      spec:
        accessModes: 
          - {{ .Values.postgres.persistence.accessMode }}
        {{- if .Values.postgres.persistence.storageClass }}
        storageClassName: {{ .Values.postgres.persistence.storageClass }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.postgres.persistence.size }}
  {{- end }}