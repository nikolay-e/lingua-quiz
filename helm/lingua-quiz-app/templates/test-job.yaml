{{- if .Values.tests.enabled}}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{include "lingua-quiz-app.fullname" .}}-tests
  namespace: {{include "lingua-quiz-app.namespace" .}}
  labels:
    {{- include "lingua-quiz-app.labels" . | nindent 4}}
    app.kubernetes.io/component: tests
  annotations:
    # Run tests after deployment - non-blocking
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "15"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded,hook-failed
spec:
  ttlSecondsAfterFinished: {{.Values.tests.ttlSecondsAfterFinished}}
  template:
    metadata:
      labels:
        {{- include "lingua-quiz-app.labels" . | nindent 8}}
        app.kubernetes.io/component: tests
    spec:
      {{- with .Values.imagePullSecrets}}
      imagePullSecrets:
        {{- toYaml . | nindent 8}}
      {{- end}}
      # Wait for backend and frontend services to be ready
      initContainers:
      - name: wait-for-backend
        image: "curlimages/curl:8.5.0"
        command:
        - sh
        - -c
        - |
          echo "Waiting for backend service to be ready..."
          until curl -f http://{{include "lingua-quiz-app.fullname" .}}-backend:9000/api/health; do
            echo "Backend not ready, waiting..."
            sleep 5
          done
          echo "Backend is ready!"
        resources:
          requests:
            cpu: "10m"
            memory: "32Mi"
          limits:
            cpu: "25m"
            memory: "64Mi"
      - name: wait-for-frontend
        image: "curlimages/curl:8.5.0"
        command:
        - sh
        - -c
        - |
          echo "Waiting for frontend service to be ready..."
          until curl -f http://{{include "lingua-quiz-app.fullname" .}}-frontend/; do
            echo "Frontend not ready, waiting..."
            sleep 5
          done
          echo "Frontend is ready!"
        resources:
          requests:
            cpu: "10m"
            memory: "32Mi"
          limits:
            cpu: "25m"
            memory: "64Mi"
      containers:
      - name: test-runner
        image: "{{.Values.tests.image.repository}}:{{.Values.tests.image.tag | default .Chart.AppVersion}}"
        imagePullPolicy: {{.Values.tests.image.pullPolicy}}
        command: ["python3", "run_tests.py"]
        env:
          # Configure test endpoints
          - name: API_URL
            value: "http://{{include "lingua-quiz-app.fullname" .}}-backend:9000/api"
          - name: FRONTEND_URL
            value: "http://{{include "lingua-quiz-app.fullname" .}}-frontend"
          - name: SKIP_TTS_TESTS
            value: "{{.Values.tests.skipTtsTests | default "true"}}"
          # Playwright configuration
          - name: PLAYWRIGHT_BASE_URL
            value: "http://{{include "lingua-quiz-app.fullname" .}}-frontend"
          {{- if .Values.tests.env}}
          {{- toYaml .Values.tests.env | nindent 10}}
          {{- end}}
        resources:
          {{- toYaml .Values.tests.resources | nindent 10}}
      restartPolicy: {{.Values.tests.restartPolicy}}
      {{- with .Values.nodeSelector}}
      nodeSelector:
        {{- toYaml . | nindent 8}}
      {{- end}}
      {{- with .Values.affinity}}
      affinity:
        {{- toYaml . | nindent 8}}
      {{- end}}
      {{- with .Values.tolerations}}
      tolerations:
        {{- toYaml . | nindent 8}}
      {{- end}}
  backoffLimit: {{.Values.tests.backoffLimit}}
{{- end}}
