name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

permissions:
  contents: read
  issues: write
  pull-requests: write
  security-events: write

jobs:
  common-tests:
    uses: ./.github/workflows/common-tests.yml

  prepare-secrets:
    uses: ./.github/workflows/secrets.yml
    secrets:
      VPS_SSH_PRIVATE_KEY: ${{ secrets.VPS_SSH_PRIVATE_KEY }}
      SSL_CERT: ${{ secrets.SSL_CERT }}
      SSL_KEY: ${{ secrets.SSL_KEY }}
      KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}

  build-backup-image:
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ steps.meta.outputs.version }}
      image_name: ${{ secrets.DOCKER_REGISTRY_USERNAME }}/lingua-quiz-backup
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_REGISTRY_USERNAME }}
          password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ secrets.DOCKER_REGISTRY_USERNAME }}/lingua-quiz-backup
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha,prefix=,suffix=,format=short
            latest

      - name: Build and push backup image
        uses: docker/build-push-action@v4
        with:
          context: ./packages/backend
          file: ./packages/backend/docker/backup/Dockerfile
          push: ${{ github.event_name == 'push' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  frontend:
    name: Build and Deploy Frontend (VPS)
    needs: [common-tests, prepare-secrets]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build and Deploy Frontend using Published Action
        id: deploy-frontend
        uses: nikolay-e/docker-nginx-vps-deploy-action@latest
        with:
          image-name: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' && 'lingua-quiz-com' || 'test-lingua-quiz-com' }}
          docker-registry-username: ${{ secrets.DOCKER_REGISTRY_USERNAME }}
          vps-host: ${{ secrets.VPS_HOST }}
          vps-user: ${{ secrets.VPS_USER }}
          container-port: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' && 8444 || 8445 }}
          domain: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' && 'lingua-quiz.nikolay-eremeev.com' || 'test-lingua-quiz.nikolay-eremeev.com' }}
          docker-context: packages/frontend
          docker-file: packages/frontend/Dockerfile
        env:
          DOCKER_REGISTRY_TOKEN: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
          VPS_SSH_PRIVATE_KEY: ${{ needs.prepare-secrets.outputs.vps_ssh_key }}
          SSL_CERT: ${{ needs.prepare-secrets.outputs.ssl_cert }}
          SSL_KEY: ${{ needs.prepare-secrets.outputs.ssl_key }}

  backend:
    needs: [common-tests, prepare-secrets, build-backup-image]
    uses: ./.github/workflows/backend-workflow.yml
    secrets:
      DOCKER_REGISTRY_USERNAME: ${{ secrets.DOCKER_REGISTRY_USERNAME }}
      DOCKER_REGISTRY_TOKEN: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
      KUBE_CONFIG: ${{ needs.prepare-secrets.outputs.kube_config }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      VPS_HOST: ${{ secrets.VPS_HOST }}
      VPS_USER: ${{ secrets.VPS_USER }}
      VPS_SSH_PRIVATE_KEY: ${{ needs.prepare-secrets.outputs.vps_ssh_key }}
      SSL_CERT: ${{ needs.prepare-secrets.outputs.ssl_cert }}
      SSL_KEY: ${{ needs.prepare-secrets.outputs.ssl_key }}

  integration-tests:
    needs: [frontend, backend]
    uses: ./.github/workflows/integration-tests.yml
    with:
      frontend-url:
        ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' &&
        'https://lingua-quiz.nikolay-eremeev.com' || 'https://test-lingua-quiz.nikolay-eremeev.com'
        }}
      backend-url:
        ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' &&
        'https://api-lingua-quiz.nikolay-eremeev.com' ||
        'https://test-api-lingua-quiz.nikolay-eremeev.com' }}
