name: Backend CI/CD

on:
  push:
    branches:
      - main
    paths:
      - 'packages/backend/**'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        context: ./packages/backend
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/lingua-quiz-backend:latest
    
    - name: Set up kubectl
      uses: azure/setup-kubectl@v1
    
    - name: Install kustomize
      run: |
        curl -s "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh" | bash
        sudo mv kustomize /usr/local/bin/

    - name: Set up kubeconfig
      run: |
        mkdir -p $HOME/.kube
        echo "${{ secrets.KUBE_CONFIG }}" > $HOME/.kube/config
        chmod 600 $HOME/.kube/config

    - name: Verify kubectl configuration
      run: kubectl cluster-info

    - name: Create or update PostgreSQL secret
      run: |
        kubectl create secret generic postgres-secret \
          --from-literal=POSTGRES_DB=linguaquiz \
          --from-literal=POSTGRES_USER=${{ secrets.POSTGRES_USER }} \
          --from-literal=POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} \
          --dry-run=client -o yaml | kubectl apply -f -

    - name: Create or update JWT secret
      run: |
        kubectl create secret generic jwt-secret \
          --from-literal=JWT_SECRET=${{ secrets.JWT_SECRET }} \
          --dry-run=client -o yaml | kubectl apply -f -

    - name: Deploy to Kubernetes
      run: |
        cd packages/backend/k8s
        kustomize edit set image lingua-quiz-backend=${{ secrets.DOCKERHUB_USERNAME }}/lingua-quiz-backend:latest
        kustomize build | kubectl apply -f -

    - name: Run Database Migrations
      run: |
        kubectl get pods
        BACKEND_POD=$(kubectl get pods -l app=lingua-quiz-backend -o jsonpath="{.items[0].metadata.name}")
        kubectl exec $BACKEND_POD -- npm run migrate