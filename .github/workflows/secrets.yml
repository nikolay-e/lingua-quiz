name: Prepare Secrets

on:
  workflow_call:
    secrets:
      SSL_CERT:
        required: true
      SSL_KEY:
        required: true
      KUBE_CONFIG:
        required: true
    outputs:
      ssl_cert:
        description: "Decoded SSL certificate"
        value: ${{ jobs.decode-secrets.outputs.ssl_cert }}
      ssl_key:
        description: "Decoded SSL private key"
        value: ${{ jobs.decode-secrets.outputs.ssl_key }}
      kube_config:
        description: "Decoded Kubernetes configuration"
        value: ${{ jobs.decode-secrets.outputs.kube_config }}

permissions:
  contents: read
  issues: write
  pull-requests: write
  security-events: write

jobs:
  decode-secrets:
    runs-on: ubuntu-latest
    outputs:
      ssl_cert: ${{ steps.decode.outputs.ssl_cert }}
      ssl_key: ${{ steps.decode.outputs.ssl_key }}
      kube_config: ${{ steps.decode.outputs.kube_config }}
    steps:
      - name: Decode Base64 Secrets
        id: decode
        env:
          SECRET_SSL_CERT: ${{ secrets.SSL_CERT }}
          SECRET_SSL_KEY: ${{ secrets.SSL_KEY }}
          SECRET_KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
        run: |
          echo "Decoding secrets..."

          # Check if secrets are empty (basic validation)
          if [ -z "$SECRET_SSL_CERT" ]; then echo "::error::SSL_CERT secret is empty!"; exit 1; fi
          if [ -z "$SECRET_SSL_KEY" ]; then echo "::error::SSL_KEY secret is empty!"; exit 1; fi
          if [ -z "$SECRET_KUBE_CONFIG" ]; then echo "::error::KUBE_CONFIG secret is empty!"; exit 1; fi

          # Use Heredoc syntax with $GITHUB_OUTPUT for multiline values
          # Decode SSL Cert
          echo 'ssl_cert<<EOF' >> $GITHUB_OUTPUT
          echo "$SECRET_SSL_CERT" | base64 -d >> $GITHUB_OUTPUT
          echo 'EOF' >> $GITHUB_OUTPUT

          # Decode SSL Key
          echo 'ssl_key<<EOF' >> $GITHUB_OUTPUT
          echo "$SECRET_SSL_KEY" | base64 -d >> $GITHUB_OUTPUT
          echo 'EOF' >> $GITHUB_OUTPUT

          # Pass kube config still base64 encoded for safety - will decode at usage point
          # No need to decode here since we will decode at the usage point
          echo "kube_config=${SECRET_KUBE_CONFIG}" >> $GITHUB_OUTPUT

          echo "Secrets decoded and set as outputs."

          # Remove verification step that might expose secrets in logs
          echo "All secrets decoded successfully without exposing content in logs"
