name: E2E Tests (Docker Compose - Parallel)

on:
  workflow_call:
    # Define secrets expected from the caller
    secrets:
      POSTGRES_DB:
        required: false # Optional due to fallback
      POSTGRES_USER:
        required: false
      POSTGRES_PASSWORD:
        required: false
      JWT_SECRET:
        required: false

permissions: # Permissions needed by this workflow
  contents: read # For checkout
  actions: write # For upload-artifact

jobs:
  # --- Job to generate test matrix from CSV filenames ---
  generate-e2e-matrix:
    name: Generate E2E Quiz List Matrix
    runs-on: ubuntu-latest
    outputs:
      quiz_list: ${{ steps.get_list.outputs.quiz_list_json }} # Ensure output name consistency
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # REPLACED Node script with shell commands + jq
      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Generate Quiz List from Migration CSVs (using shell)
        id: get_list
        run: |
          echo "Searching for CSV files in packages/backend/migrations/"
          MIGRATION_DIR="packages/backend/migrations"
          if [ ! -d "$MIGRATION_DIR" ]; then
             echo "::error::Migration directory not found: $MIGRATION_DIR"
             echo "quiz_list_json=[]" >> "$GITHUB_OUTPUT" # Use consistent output name
             exit 1
          fi
          cd "$MIGRATION_DIR"

          # List CSVs, remove extension, remove suffix, handle no files found
          RAW_LIST=$(ls *.csv 2>/dev/null | sed -E 's/\.csv$//; s/ --.*//' || echo "")

          if [ -z "$RAW_LIST" ]; then
            echo "No CSV files found in $MIGRATION_DIR."
            JSON_LIST="[]"
          else
            echo "Found potential quiz names:"
            echo "$RAW_LIST"
            # Create a valid JSON array string using jq
            JSON_LIST=$(echo "$RAW_LIST" | jq -R . | jq -sc .)
          fi
          echo "Generated JSON List: ${JSON_LIST}"
          echo "quiz_list_json=${JSON_LIST}" >> "$GITHUB_OUTPUT" # Use consistent output name
          cd - > /dev/null # Go back silently

      - name: Log generated matrix
        run: |
          echo "Quiz list JSON matrix: ${{ steps.get_list.outputs.quiz_list_json }}" # Use consistent output name

  # --- Job: E2E Tests in Docker Compose ---
  run-tests:
    name: E2E Test (${{ matrix.quiz_name }})
    needs: generate-e2e-matrix # Depends on list generation WITHIN THIS WORKFLOW
    runs-on: ubuntu-latest
    # Run matrix only if the list is not empty
    if: ${{ needs.generate-e2e-matrix.outputs.quiz_list_json != '[]' && needs.generate-e2e-matrix.outputs.quiz_list_json != '' }}
    strategy:
      fail-fast: false # Don't stop other tests if one fails
      matrix:
        # Use JSON list from the previous job in this workflow
        quiz_name: ${{ fromJson(needs.generate-e2e-matrix.outputs.quiz_list_json || '[]') }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build and Run Docker Compose E2E for Quiz "${{ matrix.quiz_name }}"
        id: run_compose_e2e
        env:
          # Pass quiz name from matrix
          E2E_QUIZ_NAME: ${{ matrix.quiz_name }}

          # Use PASSED secrets (or fallback to defaults)
          POSTGRES_DB: ${{ secrets.POSTGRES_DB || 'linguaquiz_local_db' }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER || 'linguaquiz_local_user' }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD || 'your_strong_local_password' }}
          JWT_SECRET: ${{ secrets.JWT_SECRET || 'your_very_secret_local_jwt_key_that_is_long' }}
          NODE_ENV: development # Or 'test'

        run: |
          echo "Starting Docker Compose E2E for Quiz: ${{ matrix.quiz_name }}"
          # Use --env-file, Compose automatically picks up other env vars too
          docker compose --env-file .env up \
            --build \
            --abort-on-container-exit \
            --exit-code-from e2e-tests \
            --force-recreate \
            e2e-tests
          echo "Docker Compose for ${{ matrix.quiz_name }} exited with code $?"

      - name: Upload Playwright Artifacts (${{ matrix.quiz_name }})
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report-compose-${{ matrix.quiz_name }}
          path: |
            packages/e2e-tests/playwright-report/
            packages/e2e-tests/test-results/
          retention-days: 7

      - name: Docker Compose Logs on Failure (${{ matrix.quiz_name }})
        if: failure()
        run: docker compose --env-file .env logs --tail="all"

      - name: Cleanup Docker Compose environment (${{ matrix.quiz_name }})
        if: always()
        run: docker compose --env-file .env down -v --remove-orphans || true

      - name: Fail job if E2E tests failed for Quiz "${{ matrix.quiz_name }}"
        if: steps.run_compose_e2e.outcome == 'failure'
        run: |
          echo "::error::Docker Compose E2E tests failed for quiz: ${{ matrix.quiz_name }}"
          exit 1
